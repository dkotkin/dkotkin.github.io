"use strict";$(function(){$(".wrapper").load("home.html .container");var a=!0;$(".navBtn").click(function(){function t(){for(var a=0,t=e.length;a<t;a++)r.append($("<li>").append($('<a href="'+e[a]+'.html"></a>').addClass(e[a]).append($("<p>").text(e[a]))))}var e=["home","portfolio","about","contact"];if(a){var o=$('<div class="overlay"></div>'),r=$('<ul class="navigation"></ul>'),n=$("<footer></footer>");return n.append($('<a href="mailto:kotkin.lg@gmail.com"></a>').append($("<p>").addClass("mail").text("kotkin.lg@gmail.com"))),n.append($('<span class="rights">Copyright <span>&copy</span> Kotkin Dmytro</span>')),t(),o.append(r),o.append(n),a=!1,o.hide().appendTo($(".wrapper")).fadeIn(300),$(".top").addClass("rotate-second"),$(".middle").addClass("rotate-first"),$(".bottom").addClass("rotate-third"),$(".navigation li a").click(function(a){a.preventDefault(),$(".wrapper").load($(this).attr("href")+" .container")})}return $(".overlay").fadeOut(300,function(){$(".overlay").remove()}),$(".top").removeClass("rotate-second"),$(".middle").removeClass("rotate-first"),$(".bottom").removeClass("rotate-third"),a=!0})});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyIkIiwibG9hZCIsIiRjaGVjayIsImNsaWNrIiwiYWRkaW5nIiwiaSIsImwiLCIkYXJyIiwibGVuZ3RoIiwiJHVsIiwiYXBwZW5kIiwiYWRkQ2xhc3MiLCJ0ZXh0IiwiJG92ZXJsYXkiLCIkZm9vdGVyIiwiaGlkZSIsImFwcGVuZFRvIiwiZmFkZUluIiwiZSIsInByZXZlbnREZWZhdWx0IiwidGhpcyIsImF0dHIiLCJmYWRlT3V0IiwicmVtb3ZlIiwicmVtb3ZlQ2xhc3MiXSwibWFwcGluZ3MiOiJBQUFBLFlBRUFBLEdBQUEsV0FFQUEsRUFBQSxZQUFBQyxLQUFBLHVCQUVBLElBQUFDLElBQUEsQ0FDQUYsR0FBQSxXQUFBRyxNQUFBLFdBbURBLFFBQUFDLEtBQ0EsSUFBQSxHQUFBQyxHQUFBLEVBQUFDLEVBQUFDLEVBQUFDLE9BQUFILEVBQUFDLEVBQUFELElBQ0FJLEVBQUFDLE9BQ0FWLEVBQUEsUUFDQVUsT0FDQVYsRUFBQSxZQUFBTyxFQUFBRixHQUFBLGVBQ0FNLFNBQUFKLEVBQUFGLElBQ0FLLE9BQ0FWLEVBQUEsT0FDQVksS0FBQUwsRUFBQUYsT0EzREEsR0FBQUUsSUFBQSxPQUFBLFlBQUEsUUFBQSxVQUVBLElBQUFMLEVBQUEsQ0FDQSxHQUNBVyxHQUFBYixFQUFBLCtCQUNBUyxFQUFBVCxFQUFBLGdDQUNBYyxFQUFBZCxFQUFBLG9CQUVBLE9BQ0FjLEdBQUFKLE9BQ0FWLEVBQUEsNkNBQ0FVLE9BQ0FWLEVBQUEsT0FDQVcsU0FBQSxRQUNBQyxLQUFBLHlCQUdBRSxFQUFBSixPQUNBVixFQUFBLDJFQUdBSSxJQUVBUyxFQUFBSCxPQUFBRCxHQUNBSSxFQUFBSCxPQUFBSSxHQUNBWixHQUFBLEVBQ0FXLEVBQUFFLE9BQUFDLFNBQUFoQixFQUFBLGFBQUFpQixPQUFBLEtBRUFqQixFQUFBLFFBQUFXLFNBQUEsaUJBQ0FYLEVBQUEsV0FBQVcsU0FBQSxnQkFDQVgsRUFBQSxXQUFBVyxTQUFBLGdCQUVBWCxFQUFBLG9CQUFBRyxNQUFBLFNBQUFlLEdBQ0FBLEVBQUFDLGlCQUVBbkIsRUFBQSxZQUFBQyxLQUFBRCxFQUFBb0IsTUFBQUMsS0FBQSxRQUFBLGlCQUtBLE1BQ0FyQixHQUFBLFlBQUFzQixRQUFBLElBQUEsV0FDQXRCLEVBQUEsWUFBQXVCLFdBRUF2QixFQUFBLFFBQUF3QixZQUFBLGlCQUNBeEIsRUFBQSxXQUFBd0IsWUFBQSxnQkFDQXhCLEVBQUEsV0FBQXdCLFlBQUEsZ0JBQ0F0QixHQUFBIiwiZmlsZSI6InNjcmlwdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4kKGZ1bmN0aW9uKCkge1xyXG5cclxuICAkKFwiLndyYXBwZXJcIikubG9hZChcImhvbWUuaHRtbCAuY29udGFpbmVyXCIpO1xyXG5cclxuICB2YXIgJGNoZWNrID0gdHJ1ZTtcclxuICAkKCcubmF2QnRuJykuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgJGFyciA9IFsnaG9tZScsICdwb3J0Zm9saW8nLCAnYWJvdXQnLCAnY29udGFjdCddO1xyXG5cclxuICAgIGlmICgkY2hlY2spIHtcclxuICAgICAgdmFyIGNvdW50ID0gMCxcclxuICAgICAgICAgICRvdmVybGF5ID0gJCgnPGRpdiBjbGFzcz1cIm92ZXJsYXlcIj48L2Rpdj4nKSxcclxuICAgICAgICAgICR1bCA9ICQoJzx1bCBjbGFzcz1cIm5hdmlnYXRpb25cIj48L3VsPicpLFxyXG4gICAgICAgICAgJGZvb3RlciA9ICQoJzxmb290ZXI+PC9mb290ZXI+Jyk7XHJcblxyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgICRmb290ZXIuYXBwZW5kKFxyXG4gICAgICAgICAgJCgnPGEgaHJlZj1cIm1haWx0bzprb3RraW4ubGdAZ21haWwuY29tXCI+PC9hPicpXHJcbiAgICAgICAgICAgLmFwcGVuZChcclxuICAgICAgICAgICAgICQoJzxwPicpXHJcbiAgICAgICAgICAgICAgIC5hZGRDbGFzcygnbWFpbCcpXHJcbiAgICAgICAgICAgICAgIC50ZXh0KCdrb3RraW4ubGdAZ21haWwuY29tJylcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICksXHJcbiAgICAgICAgJGZvb3Rlci5hcHBlbmQoXHJcbiAgICAgICAgICAkKCc8c3BhbiBjbGFzcz1cInJpZ2h0c1wiPkNvcHlyaWdodCA8c3Bhbj4mY29weTwvc3Bhbj4gS290a2luIERteXRybzwvc3Bhbj4nKVxyXG4gICAgICAgICksXHJcblxyXG4gICAgICAgIGFkZGluZygpLFxyXG5cclxuICAgICAgICAkb3ZlcmxheS5hcHBlbmQoJHVsKSxcclxuICAgICAgICAkb3ZlcmxheS5hcHBlbmQoJGZvb3RlciksXHJcbiAgICAgICAgJGNoZWNrID0gZmFsc2UsXHJcbiAgICAgICAgJG92ZXJsYXkuaGlkZSgpLmFwcGVuZFRvKCQoJy53cmFwcGVyJykpLmZhZGVJbigzMDApLFxyXG5cclxuICAgICAgICAkKCcudG9wJykuYWRkQ2xhc3MoJ3JvdGF0ZS1zZWNvbmQnKSxcclxuICAgICAgICAkKCcubWlkZGxlJykuYWRkQ2xhc3MoJ3JvdGF0ZS1maXJzdCcpLFxyXG4gICAgICAgICQoJy5ib3R0b20nKS5hZGRDbGFzcygncm90YXRlLXRoaXJkJyksXHJcblxyXG4gICAgICAgICQoJy5uYXZpZ2F0aW9uIGxpIGEnKS5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgICAgJCgnLndyYXBwZXInKS5sb2FkKCAkKHRoaXMpLmF0dHIoJ2hyZWYnKSArICcgLmNvbnRhaW5lcicgKTtcclxuICAgICAgICB9KVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICQoJy5vdmVybGF5JykuZmFkZU91dCgzMDAsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoJy5vdmVybGF5JykucmVtb3ZlKCk7XHJcbiAgICAgIH0pLFxyXG4gICAgICAkKCcudG9wJykucmVtb3ZlQ2xhc3MoJ3JvdGF0ZS1zZWNvbmQnKSxcclxuICAgICAgJCgnLm1pZGRsZScpLnJlbW92ZUNsYXNzKCdyb3RhdGUtZmlyc3QnKSxcclxuICAgICAgJCgnLmJvdHRvbScpLnJlbW92ZUNsYXNzKCdyb3RhdGUtdGhpcmQnKSxcclxuICAgICAgJGNoZWNrID0gdHJ1ZVxyXG4gICAgKTtcclxuXHJcbiAgICBmdW5jdGlvbiBhZGRpbmcoKSB7XHJcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gJGFyci5sZW5ndGg7IGkgPCBsOyBpKyspIHtcclxuICAgICAgICAkdWwuYXBwZW5kKFxyXG4gICAgICAgICAgJCgnPGxpPicpXHJcbiAgICAgICAgICAgIC5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgJCgnPGEgaHJlZj1cIicgKyAkYXJyW2ldICsgJy5odG1sXCI+PC9hPicpXHJcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoJGFycltpXSlcclxuICAgICAgICAgICAgICAgIC5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgICAgICQoJzxwPicpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRleHQoJGFycltpXSlcclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgfSk7XHJcblxyXG59KTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
